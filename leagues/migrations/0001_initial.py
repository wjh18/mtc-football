# Generated by Django 3.2.6 on 2021-10-03 23:26

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='leagues.conference')),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('gm_name', models.CharField(max_length=300)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leagues', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Matchup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date(2021, 8, 29))),
                ('week_number', models.PositiveSmallIntegerField(default=1)),
                ('is_preseason', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('age', models.PositiveSmallIntegerField()),
                ('experience', models.PositiveSmallIntegerField()),
                ('prototype', models.CharField(max_length=50)),
                ('overall_rating', models.PositiveSmallIntegerField()),
                ('potential', models.PositiveSmallIntegerField()),
                ('confidence', models.PositiveSmallIntegerField()),
                ('iq', models.PositiveSmallIntegerField()),
                ('is_free_agent', models.BooleanField(default=False)),
                ('position', models.CharField(max_length=50)),
                ('speed', models.PositiveSmallIntegerField()),
                ('strength', models.PositiveSmallIntegerField()),
                ('agility', models.PositiveSmallIntegerField()),
                ('awareness', models.PositiveSmallIntegerField()),
                ('stamina', models.PositiveSmallIntegerField()),
                ('injury', models.PositiveSmallIntegerField()),
                ('run_off', models.PositiveSmallIntegerField()),
                ('pass_off', models.PositiveSmallIntegerField()),
                ('special_off', models.PositiveSmallIntegerField()),
                ('run_def', models.PositiveSmallIntegerField()),
                ('pass_def', models.PositiveSmallIntegerField()),
                ('special_def', models.PositiveSmallIntegerField()),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='leagues.league')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=datetime.date(2021, 8, 29))),
                ('current_date', models.DateField(default=datetime.date(2021, 8, 29))),
                ('duration', models.DurationField(default=datetime.timedelta(days=364))),
                ('phase', models.PositiveSmallIntegerField(choices=[(1, 'Re-signing'), (2, 'Free Agent Signing'), (3, 'Draft'), (4, 'Regular Season'), (5, 'Playoffs'), (6, 'Offseason')], default=4)),
                ('season_number', models.PositiveSmallIntegerField(default=1)),
                ('week_number', models.PositiveSmallIntegerField(default=1)),
                ('is_current', models.BooleanField(default=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='leagues.league')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=3)),
                ('overall_rating', models.PositiveSmallIntegerField(default=1)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='leagues.division')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='leagues.league')),
            ],
            options={
                'ordering': ['location'],
            },
        ),
        migrations.CreateModel(
            name='UserTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active_team', models.BooleanField(default=True)),
                ('league', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='leagues.league')),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='leagues.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamStanding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.PositiveSmallIntegerField(default=1)),
                ('wins', models.SmallIntegerField(default=0)),
                ('losses', models.SmallIntegerField(default=0)),
                ('ties', models.SmallIntegerField(default=0)),
                ('points_for', models.SmallIntegerField(default=0)),
                ('points_against', models.SmallIntegerField(default=0)),
                ('streak', models.SmallIntegerField(default=0)),
                ('home_wins', models.SmallIntegerField(default=0)),
                ('home_losses', models.SmallIntegerField(default=0)),
                ('home_ties', models.SmallIntegerField(default=0)),
                ('away_wins', models.SmallIntegerField(default=0)),
                ('away_losses', models.SmallIntegerField(default=0)),
                ('away_ties', models.SmallIntegerField(default=0)),
                ('div_wins', models.SmallIntegerField(default=0)),
                ('div_losses', models.SmallIntegerField(default=0)),
                ('div_ties', models.SmallIntegerField(default=0)),
                ('conf_wins', models.SmallIntegerField(default=0)),
                ('conf_losses', models.SmallIntegerField(default=0)),
                ('conf_ties', models.SmallIntegerField(default=0)),
                ('non_conf_wins', models.SmallIntegerField(default=0)),
                ('non_conf_losses', models.SmallIntegerField(default=0)),
                ('non_conf_ties', models.SmallIntegerField(default=0)),
                ('last_5_wins', models.SmallIntegerField(default=0)),
                ('last_5_losses', models.SmallIntegerField(default=0)),
                ('last_5_ties', models.SmallIntegerField(default=0)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_standings', to='leagues.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_standings', to='leagues.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_ranking', models.PositiveSmallIntegerField(default=1)),
                ('conference_ranking', models.PositiveSmallIntegerField(default=1)),
                ('division_ranking', models.PositiveSmallIntegerField(default=1)),
                ('standing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ranking', to='leagues.teamstanding')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMatchStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passing_comps', models.SmallIntegerField(default=0)),
                ('passing_atts', models.SmallIntegerField(default=0)),
                ('passing_yds', models.SmallIntegerField(default=0)),
                ('passing_tds', models.SmallIntegerField(default=0)),
                ('passing_ints', models.SmallIntegerField(default=0)),
                ('passing_fds', models.SmallIntegerField(default=0)),
                ('times_sacked', models.SmallIntegerField(default=0)),
                ('receptions', models.SmallIntegerField(default=0)),
                ('receiving_targets', models.SmallIntegerField(default=0)),
                ('receiving_yds', models.SmallIntegerField(default=0)),
                ('receiving_tds', models.SmallIntegerField(default=0)),
                ('receiving_fds', models.SmallIntegerField(default=0)),
                ('rushing_atts', models.SmallIntegerField(default=0)),
                ('rushing_yds', models.SmallIntegerField(default=0)),
                ('rushing_tds', models.SmallIntegerField(default=0)),
                ('rushing_fds', models.SmallIntegerField(default=0)),
                ('fumbles_lost', models.SmallIntegerField(default=0)),
                ('def_ints', models.SmallIntegerField(default=0)),
                ('forced_fumbles', models.SmallIntegerField(default=0)),
                ('def_tds', models.SmallIntegerField(default=0)),
                ('def_return_yds', models.SmallIntegerField(default=0)),
                ('tackles', models.SmallIntegerField(default=0)),
                ('tackles_for_loss', models.SmallIntegerField(default=0)),
                ('qb_hits', models.SmallIntegerField(default=0)),
                ('sacks', models.SmallIntegerField(default=0)),
                ('safeties', models.SmallIntegerField(default=0)),
                ('field_goals', models.SmallIntegerField(default=0)),
                ('field_goal_atts', models.SmallIntegerField(default=0)),
                ('field_goal_long', models.SmallIntegerField(default=0)),
                ('extra_points', models.SmallIntegerField(default=0)),
                ('extra_point_atts', models.SmallIntegerField(default=0)),
                ('kickoffs', models.SmallIntegerField(default=0)),
                ('kickoff_yds', models.SmallIntegerField(default=0)),
                ('touchbacks', models.SmallIntegerField(default=0)),
                ('punts', models.SmallIntegerField(default=0)),
                ('punt_yds', models.SmallIntegerField(default=0)),
                ('punt_long', models.SmallIntegerField(default=0)),
                ('punt_blocks', models.SmallIntegerField(default=0)),
                ('punt_returns', models.SmallIntegerField(default=0)),
                ('punt_return_yds', models.SmallIntegerField(default=0)),
                ('punt_return_tds', models.SmallIntegerField(default=0)),
                ('punt_return_long', models.SmallIntegerField(default=0)),
                ('kick_returns', models.SmallIntegerField(default=0)),
                ('kick_return_yds', models.SmallIntegerField(default=0)),
                ('kick_return_tds', models.SmallIntegerField(default=0)),
                ('kick_return_long', models.SmallIntegerField(default=0)),
                ('penalties', models.IntegerField(default=0)),
                ('penalty_yds', models.IntegerField(default=0)),
                ('matchup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_stats', to='leagues.matchup')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_stats', to='leagues.player')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ManyToManyField(through='leagues.Contract', to='leagues.Team'),
        ),
        migrations.AddField(
            model_name='matchup',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matchups', to='leagues.team'),
        ),
        migrations.AddField(
            model_name='matchup',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matchups', to='leagues.team'),
        ),
        migrations.AddField(
            model_name='matchup',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matchups', to='leagues.season'),
        ),
        migrations.AddField(
            model_name='contract',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='leagues.player'),
        ),
        migrations.AddField(
            model_name='contract',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='leagues.team'),
        ),
        migrations.AddField(
            model_name='conference',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conferences', to='leagues.league'),
        ),
    ]
